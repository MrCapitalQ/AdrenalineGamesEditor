<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="MrCapitalQ.AdrenalineGamesEditor.Games.GamesListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:MrCapitalQ.AdrenalineGamesEditor.Games"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:converters="using:CommunityToolkit.WinUI.Converters"
      xmlns:ui="using:CommunityToolkit.WinUI"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d"
      NavigationCacheMode="Enabled">

    <Page.Resources>
        <converters:BoolToObjectConverter x:Key="IsManualSummaryConverter"
                                          FalseValue="Automatically detected"
                                          TrueValue="Manually added" />
        <converters:BoolToObjectConverter x:Key="IsHiddenOpacityConverter"
                                          FalseValue="1"
                                          TrueValue="0.67" />

        <!-- An exception is thrown if FalseValue is empty string or not set. Using a zero width space as a workaround. -->
        <converters:BoolToObjectConverter x:Key="IsHiddenSummaryConverter"
                                          FalseValue="&#x200B;"
                                          TrueValue=" â€¢ Hidden" />

        <DataTemplate x:Key="GameListItemTemplate"
                      x:DataType="local:GamesListItemViewModel">
            <Grid Opacity="{x:Bind IsHidden, Mode=OneWay, Converter={StaticResource IsHiddenOpacityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:AdrenalineGameImage SourcePath="{x:Bind EffectiveImagePath, Mode=OneWay}"
                                           Width="44"
                                           Height="44"
                                           Margin="0,4,8,4"
                                           CornerRadius="{StaticResource ControlCornerRadius}" />
                <StackPanel VerticalAlignment="Center"
                            Grid.Column="1">
                    <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind IsManual, Mode=OneWay, Converter={StaticResource IsManualSummaryConverter}}"
                                   Style="{ThemeResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                        <TextBlock Text="{x:Bind IsHidden, Mode=OneWay, Converter={StaticResource IsHiddenSummaryConverter}}"
                                   Style="{ThemeResource CaptionTextBlockStyle}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                    </StackPanel>
                </StackPanel>
                <FontIcon Glyph="&#xE7BA;"
                          Foreground="{ThemeResource SystemFillColorCautionBrush}"
                          Visibility="{x:Bind RequiresAttention, Mode=OneWay}"
                          Margin="8,0"
                          Grid.Column="2"
                          ToolTipService.ToolTip="Attention required" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <RepositionThemeTransition />
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="GamesListStates">
                <VisualState x:Name="Default" />
                <VisualState x:Name="GamesListEmpty">
                    <VisualState.StateTriggers>
                        <ui:IsNullOrEmptyStateTrigger Value="{x:Bind _viewModel.GamesCollectionView}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EmptyListText.Visibility"
                                Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <CommandBar DefaultLabelPosition="Right"
                    VerticalContentAlignment="Center">
            <CommandBar.Content>
                <TextBlock Text="Games"
                           Style="{StaticResource TitleTextBlockStyle}"
                           Margin="12,0"
                           TextLineBounds="Tight" />
            </CommandBar.Content>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Restart Adrenaline"
                              Command="{x:Bind _viewModel.RestartAdrenalineCommand}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE777;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
            <AppBarButton Icon="Add"
                          Label="Add"
                          Command="{x:Bind _viewModel.AddGameCommand}" />
            <AppBarButton Icon="Filter"
                          Label="Filter">
                <AppBarButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <ToggleMenuFlyoutItem Text="Automatically detected"
                                              IsChecked="{x:Bind _viewModel.ShowAutomaticallyDetectedGames, Mode=TwoWay}" />
                        <ToggleMenuFlyoutItem Text="Manually added"
                                              IsChecked="{x:Bind _viewModel.ShowManuallyAddedGames, Mode=TwoWay}" />
                        <MenuFlyoutSeparator />
                        <ToggleMenuFlyoutItem Text="Hidden"
                                              IsChecked="{x:Bind _viewModel.ShowHiddenGames, Mode=TwoWay}" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>


        <StackPanel Grid.Row="1">
            <ProgressBar IsIndeterminate="True"
                         Visibility="{x:Bind _viewModel.IsAdrenalineRestarting, Mode=OneWay}" />
            <InfoBar IsOpen="{x:Bind _viewModel.DidAdrenalineRestartFail, Mode=TwoWay}"
                     Severity="Error"
                     Title="Arenaline restart failed."
                     Message="Manually stop and start the Adrenaline app or restart your PC to apply your changes." />

            <InfoBar IsOpen="{x:Bind _viewModel.IsAdrenalineRestartRequired, Mode=OneWay}"
                     IsClosable="False"
                     Severity="Warning"
                     Title="Changes were made but not applied."
                     Message="Restart the Adrenaline app to apply your changes.">
                <InfoBar.ActionButton>
                    <Button Content="Restart"
                            HorizontalAlignment="Right"
                            Command="{x:Bind _viewModel.RestartAdrenalineCommand}" />
                </InfoBar.ActionButton>
            </InfoBar>
        </StackPanel>

        <Grid Grid.Row="2">
            <TextBlock x:Name="EmptyListText"
                       Text="No games found for the selected filters"
                       Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                       TextAlignment="Center"
                       Visibility="Collapsed"
                       Margin="0,16" />
            <ListView x:Name="GamesList"
                      ItemsSource="{x:Bind _viewModel.GamesCollectionView}"
                      ItemTemplate="{StaticResource GameListItemTemplate}"
                      SelectionMode="None"
                      IsItemClickEnabled="True">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{x:Bind _viewModel.EditGameCommand}"
                                                  InputConverter="{StaticResource ItemClickedParameterConverter}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </ListView>
        </Grid>
    </Grid>
</Page>
