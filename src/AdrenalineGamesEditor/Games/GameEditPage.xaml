<?xml version="1.0" encoding="utf-8"?>
<Page x:Class="MrCapitalQ.AdrenalineGamesEditor.Games.GameEditPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:MrCapitalQ.AdrenalineGamesEditor.Games"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <CommandBar IsOpen="False"
                    DefaultLabelPosition="Right"
                    VerticalContentAlignment="Center">
            <CommandBar.Content>
                <TextBlock Text="{x:Bind _viewModel.Title, Mode=OneWay}"
                           Style="{StaticResource TitleTextBlockStyle}"
                           Margin="12,0" />
            </CommandBar.Content>
            <AppBarButton Icon="Save"
                          Label="Save"
                          Command="{x:Bind _viewModel.SaveCommand}" />
        </CommandBar>

        <ScrollView Grid.Row="1">
            <StackPanel Margin="16"
                        Spacing="16">
                <StackPanel HorizontalAlignment="Center">
                    <local:AdrenalineGameImage SourcePath="{x:Bind _viewModel.EffectiveImagePath, Mode=OneWay}"
                                               Width="150"
                                               Height="150"
                                               CornerRadius="{StaticResource ControlCornerRadius}">
                        <local:AdrenalineGameImage.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Copy image path"
                                                Command="{x:Bind _viewModel.CopyImagePathCommand}" />
                            </MenuFlyout>
                        </local:AdrenalineGameImage.ContextFlyout>
                    </local:AdrenalineGameImage>
                    <CommandBar DefaultLabelPosition="Right">
                        <AppBarButton Icon="Edit"
                                      Label="Edit"
                                      Command="{x:Bind _viewModel.EditImageCommand}" />
                        <AppBarButton Icon="Clear"
                                      Label="Remove"
                                      IsEnabled="{x:Bind _viewModel.HasImagePath, Mode=OneWay}">
                            <AppBarButton.Flyout>
                                <Flyout x:Name="RemoveImageFlyout">
                                    <Flyout.FlyoutPresenterStyle>
                                        <Style TargetType="FlyoutPresenter"
                                               BasedOn="{StaticResource DefaultFlyoutPresenterStyle}">
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                                                    Value="Disabled" />
                                        </Style>
                                    </Flyout.FlyoutPresenterStyle>
                                    <StackPanel Spacing="8">
                                        <TextBlock Style="{ThemeResource BaseTextBlockStyle}"
                                                   Text="Remove custom image?" />
                                        <TextBlock Text="The custom image set for this game will no longer be used and the executable's icon will be used if available."
                                                   TextWrapping="Wrap" />
                                        <Button Content="Remove"
                                                HorizontalAlignment="Right"
                                                Command="{x:Bind _viewModel.RemoveImageCommand}">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Click">
                                                    <core:CallMethodAction MethodName="Hide"
                                                                           TargetObject="{x:Bind RemoveImageFlyout}" />
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </Button>
                                    </StackPanel>
                                </Flyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>
                </StackPanel>
                <TextBox Text="{x:Bind _viewModel.DisplayName, Mode=TwoWay}"
                         Header="Display name" />
                <TextBox Text="{x:Bind _viewModel.Command, Mode=TwoWay}"
                         Header="Command" />
                <StackPanel Spacing="8">
                    <ComboBox ItemsSource="{x:Bind _viewModel.ExePathOptions, Mode=OneWay}"
                              SelectedItem="{x:Bind _viewModel.SelectedExePathOption, Mode=TwoWay}"
                              DisplayMemberPath="Display"
                              Header="Executable path"
                              HorizontalAlignment="Stretch" />
                    <controls:SwitchPresenter Value="{x:Bind _viewModel.SelectedExePathOption.Value, Mode=OneWay}">
                        <controls:Case IsDefault="True">
                            <TextBlock Text="{x:Bind _viewModel.ExePath, Mode=OneWay}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Foreground="{StaticResource TextFillColorSecondaryBrush}" />
                        </controls:Case>
                        <controls:Case Value="!CUSTOM!">
                            <TextBox Text="{x:Bind _viewModel.ExePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     TextWrapping="Wrap" />
                        </controls:Case>
                    </controls:SwitchPresenter>
                </StackPanel>
            </StackPanel>
        </ScrollView>
    </Grid>
</Page>
